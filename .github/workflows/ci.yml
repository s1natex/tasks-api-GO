name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "release-*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: read

env:
  IMAGE: s1natex/tasks-api-go

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Go version
        run: go version

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gobuild-

      - name: Run unit tests
        run: go test ./... -v

      - name: Lint (golangci-lint)
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

  docker:
    needs: test-and-lint
    runs-on: ubuntu-latest
    if: github.event_name == 'push' 
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/heads/main') }}
            type=sha,format=long
            type=ref,event=tag
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (and push on main/tags)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max
