{
  "openapi": "3.0.3",
  "info": {
    "title": "tasks-api-GO",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "/" }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "status": { "type": "string", "example": "ok" } },
                  "required": ["status"]
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "List tasks",
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Task" }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          }
        }
      },
      "post": {
        "summary": "Create task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateTaskRequest" } }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Task" } }
            }
          },
          "400": {
            "description": "Invalid JSON",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "example": 1 },
          "title": { "type": "string", "example": "learn chi" },
          "done": { "type": "boolean", "example": false },
          "created_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "title", "done", "created_at"]
      },
      "CreateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "example": "new task"
          }
        },
        "required": ["title"]
      },
      "FieldError": {
        "type": "object",
        "properties": {
          "field": { "type": "string", "example": "title" },
          "message": { "type": "string", "example": "title is required" }
        },
        "required": ["field", "message"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": ["invalid_json", "validation_error", "unexpected_error"]
          },
          "details": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldError" }
          }
        },
        "required": ["error"]
      }
    }
  }
}
